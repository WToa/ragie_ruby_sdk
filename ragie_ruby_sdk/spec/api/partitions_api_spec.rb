=begin
#Ragie API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.17.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for RagieRubySdk::PartitionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PartitionsApi' do
  before do
    # run before each test
    @api_instance = RagieRubySdk::PartitionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PartitionsApi' do
    it 'should create an instance of PartitionsApi' do
      expect(@api_instance).to be_instance_of(RagieRubySdk::PartitionsApi)
    end
  end

  # unit tests for create_partition_partitions_post
  # Create Partition
  # Create a new partition. Partitions are used to scope documents, connections, and instructions. Partitions must be lowercase alphanumeric and may only include the special characters &#x60;_&#x60; and &#x60;-&#x60;. A partition may also be created by creating a document in it. Limits for a partition may optionally be defined when creating.
  # @param create_partition_params 
  # @param [Hash] opts the optional parameters
  # @return [Partition]
  describe 'create_partition_partitions_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_partition_partitions_partition_id_delete
  # Delete Partition
  # Deletes a partition and all of its associated data. This includes connections, documents, and partition specific instructions. This operation is irreversible.
  # @param partition_id 
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, String>]
  describe 'delete_partition_partitions_partition_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_partition_partitions_partition_id_get
  # Get Partition
  # Get a partition by its ID. Includes usage information such as the number of documents and pages hosted and processed. The partition&#39;s limits are also included.
  # @param partition_id 
  # @param [Hash] opts the optional parameters
  # @return [PartitionDetail]
  describe 'get_partition_partitions_partition_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_partitions_partitions_get
  # List Partitions
  # List all partitions sorted by name in ascending order. Results are paginated with a max limit of 100. When more partitions are available, a &#x60;cursor&#x60; will be provided. Use the &#x60;cursor&#x60; parameter to retrieve the subsequent page.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor An opaque cursor for pagination
  # @option opts [Integer] :page_size The number of items per page (must be greater than 0 and less than or equal to 100)
  # @return [PartitionList]
  describe 'list_partitions_partitions_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for set_partition_limits_partitions_partition_id_limits_put
  # Set Partition Limits
  # Sets limits on a partition. Limits can be set on the total number of pages a partition can host and process. When the limit is reached, the partition will be disabled. A limit may be removed by setting it to &#x60;null&#x60;.
  # @param partition_id 
  # @param partition_limit_params 
  # @param [Hash] opts the optional parameters
  # @return [PartitionDetail]
  describe 'set_partition_limits_partitions_partition_id_limits_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_partition_partitions_partition_id_patch
  # Update Partition
  # Updates a partition. This includes the partition&#39;s description and metadata schema.
  # @param partition_id 
  # @param update_partition_params 
  # @param [Hash] opts the optional parameters
  # @return [PartitionDetail]
  describe 'update_partition_partitions_partition_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
