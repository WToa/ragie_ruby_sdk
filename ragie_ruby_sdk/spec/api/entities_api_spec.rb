=begin
#Ragie API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.17.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for RagieRubySdk::EntitiesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EntitiesApi' do
  before do
    # run before each test
    @api_instance = RagieRubySdk::EntitiesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EntitiesApi' do
    it 'should create an instance of EntitiesApi' do
      expect(@api_instance).to be_instance_of(RagieRubySdk::EntitiesApi)
    end
  end

  # unit tests for create_instruction
  # Create Instruction
  # Create a new instruction. Instructions are applied to documents as they are created or updated. The results of the instruction are stored as structured data in the schema defined by the &#x60;entity_schema&#x60; parameter. The &#x60;prompt&#x60; parameter is a natural language instruction which will be applied to documents. This feature is in beta and may change in the future.
  # @param create_instruction_params 
  # @param [Hash] opts the optional parameters
  # @return [Instruction]
  describe 'create_instruction test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_instruction
  # Delete Instruction
  # Delete an instruction. This will delete the instruction and all entities generated by it. This operation is irreversible.
  # @param instruction_id The ID of the instruction.
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, String>]
  describe 'delete_instruction test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_entities_by_document
  # Get Document Extracted Entities
  # @param document_id The id of the document.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor An opaque cursor for pagination
  # @option opts [Integer] :page_size The number of items per page (must be greater than 0 and less than or equal to 100)
  # @option opts [String] :partition An optional partition to scope the request to. If omitted, accounts created after 1/9/2025 will have the request scoped to the default partition, while older accounts will have the request scoped to all partitions. Older accounts may opt in to strict partition scoping by contacting support@ragie.ai. Older accounts using the partitions feature are strongly recommended to scope the request to a partition.
  # @return [EntityList]
  describe 'list_entities_by_document test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_entities_by_instruction
  # Get Instruction Extracted Entities
  # @param instruction_id The ID of the instruction.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor An opaque cursor for pagination
  # @option opts [Integer] :page_size The number of items per page (must be greater than 0 and less than or equal to 100)
  # @option opts [String] :partition An optional partition to scope the request to. If omitted, accounts created after 1/9/2025 will have the request scoped to the default partition, while older accounts will have the request scoped to all partitions. Older accounts may opt in to strict partition scoping by contacting support@ragie.ai. Older accounts using the partitions feature are strongly recommended to scope the request to a partition.
  # @return [EntityList]
  describe 'list_entities_by_instruction test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_instructions
  # List Instructions
  # List all instructions.
  # @param [Hash] opts the optional parameters
  # @return [Array<Instruction>]
  describe 'list_instructions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_instruction
  # Update Instruction
  # @param instruction_id The ID of the instruction.
  # @param update_instruction_params 
  # @param [Hash] opts the optional parameters
  # @return [Instruction]
  describe 'update_instruction test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
